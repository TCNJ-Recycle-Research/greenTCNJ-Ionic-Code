{"version":3,"sources":["./src/app/pages/recover-password/recover-password.page.html","./src/app/pages/recover-password/recover-password.module.ts","./src/app/pages/recover-password/recover-password.page.ts","./src/app/pages/recover-password/recover-password-routing.module.ts","./src/app/pages/recover-password/recover-password.page.scss"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,kOAAmK,wnBAAwnB,sBAAsB,gnBAAgnB,E;;;;;;;;;;;;;;;;;;;;;;ACAv4C;AACM;AACF;AACQ;AAER;AAEwC;AAEvB;IAYjD,yBAAyB,SAAzB,yBAAyB;CAAG;AAA5B,yBAAyB;IAVrC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,kEAAmB;YACnB,iGAAgC;SACjC;QACD,YAAY,EAAE,CAAC,0EAAmB,CAAC;KACpC,CAAC;GACW,yBAAyB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACrBY;AAC+B;AAChC;AACU;IAO9C,mBAAmB,SAAnB,mBAAmB;IAM9B,+BAA+B;IAE/B,YAAoB,MAAc,EAAS,IAAgB,EAAS,WAAwB;QAAxE,WAAM,GAAN,MAAM,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAY;QAAS,gBAAW,GAAX,WAAW,CAAa;QAP5F,eAAU,GAAW,EAAE,CAAC;QAGxB,cAAS,GAAY,KAAK,CAAC;QAazB,4EAA4E;QAC5E,wBAAmB,GAAG;YACpB,OAAO,EAAE;gBACL,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,oDAAoD,EAAE;gBACpF,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,+BAA+B,EAAE;aAC9D;SACF;QAdH,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,KAAK,CAAC;YAC/B,oIAAoI;YACpI,2GAA2G;YAC3G,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,2CAA2C,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;SACpJ,CAAC,CAAC;IACL,CAAC;IAUH,4EAA4E;IAG5E,0BAA0B;IACxB,UAAU;QACR,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAElC,IAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAC;YACvB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;SACxB;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YAErB,uDAAuD;YACvD,IAAI,GAAG,GAAG,EAAC,IAAI,EAAE,gBAAgB,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,eAAe,EAAE,IAAI,EAAC,CAAC;YAEhG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,8DAA8D,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBAEjH,oBAAoB;gBACpB,IAAI,MAAM,GAAG,IAAa,CAAC;gBAE3B,IAAG,MAAM,CAAC,cAAc,CAAC,EAAC;oBACxB,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;oBAC7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;iBAExB;qBAAM;oBACL,oDAAoD;oBACpD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;oBAC1B,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;iBACxB;YACL,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,YAAY;QAEV,OAAO,IAAI,CAAC,SAAS,CAAC;IAExB,CAAC;CAEF;;YAxEQ,sDAAM;YADN,+DAAU;YADC,0DAAW;;AASlB,mBAAmB;IAL/B,+DAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,wFAA2C;;KAE5C,CAAC;GACW,mBAAmB,CAiE/B;AAjE+B;;;;;;;;;;;;;;;;;;;;ACVS;AACc;AAEO;AAE9D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,0EAAmB;KAC/B;CACF,CAAC;IAMW,gCAAgC,SAAhC,gCAAgC;CAAG;AAAnC,gCAAgC;IAJ5C,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,gCAAgC,CAAG;AAAH;;;;;;;;;;;;;AChB7C;AAAe,oFAAqB,eAAe,iBAAiB,mBAAmB,GAAG,8BAA8B,iBAAiB,iBAAiB,mBAAmB,GAAG,6CAA6C,miBAAmiB,E","file":"pages-recover-password-recover-password-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title style=\\\"padding: 0;\\\">Reset Your Password</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"emailForm\\\" (ngSubmit)=\\\"checkEmail()\\\">\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Email</ion-label>\\n      <ion-input formControlName=\\\"email\\\" type=\\\"text\\\" required></ion-input>\\n    </ion-item>\\n\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"emailForm.get('email').hasError(validation.type) && (emailForm.get('email').dirty || emailForm.get('email').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n    <ion-row>\\n      <ion-col>\\n        <ion-button aria-label=\\\"Send\\\" type=\\\"submit\\\" color=\\\"success\\\" expand=\\\"block\\\">Send</ion-button>\\n\\n        <div class=\\\"validation-confirmation\\\">\\n          <span *ngIf=\\\"emailFailure()\\\">If an account with that email exists a password reset link has been sent.</span>        \\n        </div>\\n\\n      </ion-col>\\n    </ion-row>\\n\\n\\n    <ion-row>\\n      <ion-col>\\n        <small>\\n          *Please provide your account's email.\\n        </small>         \\n      </ion-col>\\n    </ion-row>\\n\\n  </form>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RecoverPasswordPageRoutingModule } from './recover-password-routing.module';\n\nimport { RecoverPasswordPage } from './recover-password.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RecoverPasswordPageRoutingModule\n  ],\n  declarations: [RecoverPasswordPage]\n})\nexport class RecoverPasswordPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from \"@angular/forms\";\nimport { HttpClient} from '@angular/common/http';\nimport { Router, NavigationExtras } from '@angular/router';\n\n@Component({\n  selector: 'app-recover-password',\n  templateUrl: './recover-password.page.html',\n  styleUrls: ['./recover-password.page.scss'],\n})\nexport class RecoverPasswordPage{\n  emailInput: string = \"\";\n  emailForm: FormGroup;\n  myControl: FormControl;\n  emailSent: boolean = false;\n\n  // firstName: new FormControl()\n\n  constructor(private router: Router, public http: HttpClient, public formBuilder: FormBuilder) {\n    this.emailForm = formBuilder.group({\n        // Require validators for the input fields so we can quickly tell them if their input is valid, the patten string is what characters\n        // are allowed in the field and for email it makes sure there is a @ character and a domain field like .com\n        email: ['', Validators.compose([Validators.maxLength(30), Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\"), Validators.required])],\n    });\n  }\n\n\n    // responsible for printing error messages to the screen based on validator \n    validation_messages = {\n      'email': [\n          { type: 'maxlength', message: 'Your email cannot be more than 30 characters long.' },\n          { type: 'pattern', message: 'You must enter a valid email.' }\n        ]\n      }\n// If an account with that email exists and password reset link will be sent\n\n\n// generate_password_reset\n  checkEmail(){\n    console.log(\"try signup\");\n    console.log(this.emailForm.value);\n\n    if(!this.emailForm.valid){\n      console.log(\"INVALID\");\n    } else {\n      console.log(\"VALID\");\n\n      // Find a way to get email and password input from user\n      var obj = {func: \"generate_reset\", email: this.emailForm.value['email'], isMobileRequest: true};\n    \n      this.http.post(\"https://recycle.hpc.tcnj.edu/php/password-resets-handler.php\", JSON.stringify(obj)).subscribe(data => {\n      \n          //not getting result\n          var result = data as any[];\n\n          if(result['missingInput']){\n            console.log(\"missing Input\");\n            this.emailSent = false;\n\n          } else {\n            // output to user it succeeded and move to next page\n            this.emailSent = true;\n            console.log(\"email sent\"); \n            this.emailForm.reset();\n          }\n      });\n    }\n  }\n\n  emailFailure(){\n\n    return this.emailSent;\n  \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RecoverPasswordPage } from './recover-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RecoverPasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RecoverPasswordPageRoutingModule {}\n","export default \".validation-errors {\\n  color: red;\\n  margin: 10px;\\n  font-size: 75%;\\n}\\n\\n.validation-confirmation {\\n  color: green;\\n  margin: 10px;\\n  font-size: 75%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3JlY292ZXItcGFzc3dvcmQucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksVUFBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0FBQ0o7O0FBRUE7RUFDSSxZQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7QUFDSiIsImZpbGUiOiJyZWNvdmVyLXBhc3N3b3JkLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi52YWxpZGF0aW9uLWVycm9yc3tcbiAgICBjb2xvcjogcmVkOyBcbiAgICBtYXJnaW46IDEwcHg7XG4gICAgZm9udC1zaXplOiA3NSU7XG59XG5cbi52YWxpZGF0aW9uLWNvbmZpcm1hdGlvbntcbiAgICBjb2xvcjogZ3JlZW47IFxuICAgIG1hcmdpbjogMTBweDtcbiAgICBmb250LXNpemU6IDc1JTtcbn0iXX0= */\";"],"sourceRoot":"webpack:///"}