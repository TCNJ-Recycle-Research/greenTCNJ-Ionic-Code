{"version":3,"sources":["webpack:///src/app/pages/event-modal/event-modal.page.html","webpack:///src/app/pages/my-registered-events/my-registered-events.page.html","webpack:///src/app/pages/my-registered-events/my-registered-events-routing.module.ts","webpack:///src/app/pages/my-registered-events/my-registered-events.module.ts","webpack:///src/app/pages/event-modal/event-modal.page.ts","webpack:///src/app/pages/my-registered-events/my-registered-events.page.scss","webpack:///src/app/pages/my-registered-events/my-registered-events.page.ts","webpack:///src/app/pages/event-modal/event-modal.page.scss"],"names":["routes","path","component","MyRegisteredEventsPageRoutingModule","imports","forChild","exports","MyRegisteredEventsPageModule","forRoot","declarations","EventModalPage","modalCtrl","storage","router","http","navCtrl","modalReady","registered","setTimeout","dismiss","get","then","val","obj","func","userID","eventID","attendance","post","JSON","stringify","subscribe","data","result","eventObj","selector","template","MyRegisteredEventsPage","route","alertCtrl","locale","eventList","myEvents","pastEvents","futureEvents","today","Date","now","queryParams","params","getCurrentNavigation","extras","state","events","i","length","registeredForEvent","type","num","push","gotAllEvents","sort","a","b","date","getAllEvents","sortEvents","tempDate","startTime","unshift","noEvents","noFutureEvents","noPastEvents","event","start","end","endTime","create","componentProps","eventName","title","eventTime","eventDescription","desc","ID","modal","present"],"mappings":"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","file":"pages-my-registered-events-my-registered-events-module-es5.js","sourcesContent":["export default \"<ion-header translucent>\\n  <ion-toolbar>\\n    <ion-title>Event Registration</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button aria-label=\\\"close\\\" (click)=\\\"close()\\\">Close</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n  <ion-list inset=\\\"false\\\">\\n    <ion-list-header class=\\\"ion-padding-right ion-padding-top\\\">\\n      <h1 class=\\\"ion-no-margin\\\" [innerHTML]=\\\"eventName\\\"></h1>\\n    </ion-list-header>\\n    <ion-item lines=\\\"full\\\">\\n      <ion-text  class=\\\"ion-color-medium\\\" color=\\\"ion-color-medium\\\" >\\n        <p class=\\\"ion-no-margin\\\" [innerHTML]=\\\"eventTime\\\"></p>\\n      </ion-text>\\n    </ion-item>\\n    <ion-item lines=\\\"full\\\" >\\n      <ion-text>\\n        <p [innerHTML]=\\\"eventDescription\\\"></p>\\n      </ion-text>\\n    </ion-item>\\n    <ion-button aria-label=\\\"Register\\\" [class.ion-hide]=\\\"registered == true\\\" class=\\\"ion-margin-top\\\" color=\\\"success\\\" expand=\\\"block\\\" (click)=\\\"registerForEvent()\\\">Register</ion-button>\\n    <ion-button aria-label=\\\"Unregister\\\" [class.ion-hide]=\\\"registered == false\\\" class=\\\"ion-margin-top\\\" color=\\\"danger\\\" expand=\\\"block\\\" (click)=\\\"unregisterForEvent()\\\">Unregister</ion-button>\\n  </ion-list>\\n</ion-content>\";","export default \"<ion-header>\\n  <ion-toolbar mode=\\\"ios\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/schedule\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      <div class=\\\"ion-text-wrap\\\">\\n        My Registered Events\\n      </div>\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content>\\n\\n  <ion-segment color=\\\"primary\\\" [(ngModel)]=\\\"type\\\" scrollable>\\n    <ion-segment-button value=\\\"all\\\">\\n      <ion-label>All</ion-label>\\n    </ion-segment-button>\\n\\n    <ion-segment-button value=\\\"future\\\">\\n      <ion-label>Future</ion-label>\\n    </ion-segment-button>\\n\\n    <ion-segment-button value=\\\"past\\\">\\n      <ion-label>Past</ion-label>\\n    </ion-segment-button>\\n  </ion-segment>\\n\\n  <div [ngSwitch]=\\\"type\\\">\\n    <ion-list *ngSwitchCase=\\\"'all'\\\">\\n\\n      <ion-item>\\n        <h2><strong>All Registered Events</strong></h2>\\n      </ion-item>\\n\\n      <ion-list>\\n\\n        <ion-item *ngIf=\\\"noEvents != null\\\"> \\n          <ion-label>\\n            <h2>\\n              {{ noEvents }} \\n            </h2>\\n          </ion-label>\\n        </ion-item>\\n\\n\\n        <ion-item *ngFor=\\\"let event of myEvents\\\" (click)=\\\"onEventSelected(event)\\\">\\n          <ion-label>\\n            <h2>\\n              {{event.title}} \\n            </h2>\\n            <p>\\n              {{event.startTime|date: 'MM/dd/yyyy'}} \\n            </p>\\n          </ion-label>\\n        </ion-item>\\n      </ion-list>\\n\\n    </ion-list>\\n\\n    <ion-list *ngSwitchCase=\\\"'future'\\\">\\n\\n      <ion-item>\\n        <h2><strong>All Upcoming Events</strong></h2>\\n      </ion-item>\\n\\n      <ion-list>\\n        \\n        <ion-item *ngIf=\\\"noFutureEvents != null\\\"> \\n          <ion-label>\\n            <h2>\\n              {{ noFutureEvents }} \\n            </h2>\\n          </ion-label>\\n        </ion-item>\\n\\n        <ion-item *ngFor=\\\"let event of futureEvents\\\" (click)=\\\"onEventSelected(event)\\\">\\n          <ion-label>\\n            <h2>\\n              {{event.title}} \\n            </h2>\\n            <p>\\n              {{event.startTime|date: 'MM/dd/yyyy'}} \\n            </p>\\n          </ion-label>\\n        </ion-item>\\n      </ion-list>\\n\\n    </ion-list>\\n\\n    <ion-list *ngSwitchCase=\\\"'past'\\\" >\\n\\n      <ion-item>\\n        <h2><strong>All Past Events</strong></h2>\\n      </ion-item>\\n\\n      <ion-list>\\n\\n        <ion-item *ngIf=\\\"noPastEvents != null\\\">\\n          <ion-label>\\n            <h2>\\n              {{ noPastEvents }} \\n            </h2>\\n          </ion-label>\\n        </ion-item>\\n\\n        <ion-item *ngFor=\\\"let event of pastEvents\\\" (click)=\\\"onEventSelected(event)\\\">\\n          <ion-label>\\n            <h2>\\n              {{event.title}} \\n            </h2>\\n            <p>\\n              {{event.startTime|date: 'MM/dd/yyyy'}} \\n            </p>\\n          </ion-label>\\n        </ion-item>\\n      </ion-list>\\n\\n    </ion-list>\\n  </div>\\n\\n\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MyRegisteredEventsPage } from './my-registered-events.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MyRegisteredEventsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MyRegisteredEventsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { EventModalPageModule } from '../event-modal/event-modal.module';\nimport { IonicModule } from '@ionic/angular';\n\nimport { MyRegisteredEventsPageRoutingModule } from './my-registered-events-routing.module';\n\nimport { MyRegisteredEventsPage } from './my-registered-events.page';\nimport { IonicStorageModule } from '@ionic/storage';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    //EventModalPageModule,\n    IonicStorageModule.forRoot(),\n    MyRegisteredEventsPageRoutingModule\n  ],\n  declarations: [MyRegisteredEventsPage]\n})\nexport class MyRegisteredEventsPageModule {}\n","import { Component, AfterViewInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\n\nimport { HttpClient} from '@angular/common/http';\nimport { NavController } from '@ionic/angular'; \nimport { FormGroup, FormBuilder, Validators, FormControl } from \"@angular/forms\";\nimport { Router, NavigationExtras } from '@angular/router';\n\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-event-modal',\n  templateUrl: './event-modal.page.html',\n  styleUrls: ['./event-modal.page.scss'],\n})\nexport class EventModalPage implements AfterViewInit {\n\n  viewTitle: string;\n  \n  modalReady = false;\n  \n  // list of elements passed from the schedule page\n  eventObj;\n  eventID;\n  eventName;\n  eventTime;\n  eventDescription;\n\n  // boolean value used on html to display register or unregister button\n  registered;\n\n  constructor(private modalCtrl: ModalController, private storage: Storage, private router: Router, public http: HttpClient, public navCtrl: NavController) { \n\n  }\n\n  ngAfterViewInit() {\n    \n    if(this.registered == true){\n      \n    }\n    setTimeout(() => {\n      this.modalReady = true;   \n    }, 0);\n  }\n \n  // function attached to the close button to close the modal\n  close() {\n    this.modalCtrl.dismiss();\n  }\n\n  // function to register for an event calling the php script\n  registerForEvent(){\n\n    this.storage.get('userID').then((val) => {\n\n      //need to pass the userID eventID, and attendance Value\n      // attendance valaue is initially set to null, 0 means the user is registered but not attendin, and 1 is for registered and attending\n      //thus we are hardcoding it to 0 and it will be updated once the attendance is set\n      var obj = {func: \"add_participant\", userID: val, eventID: this.eventID, attendance: 0};\n    \n      this.http.post(\"https://recycle.hpc.tcnj.edu/php/participants-handler.php\", JSON.stringify(obj)).subscribe(data => {\n          \n        var result = data as any[];\n        \n        if(result[\"addSuccess\"]){\n          this.eventObj.registered = this.registered = true;\n        } \n\n      });\n\n    });\n    \n  }\n\n  // function to unregister for an event calling the php script\n  unregisterForEvent(){\n\n    this.storage.get('userID').then((val) => {\n\n      //need to pass the eventID, and userID to the php function \n      var obj = {func: \"delete_participant\", eventID: this.eventID, userID: val};\n    \n      this.http.post(\"https://recycle.hpc.tcnj.edu/php/participants-handler.php\", JSON.stringify(obj)).subscribe(data => {\n          \n        var result = data as any[];\n\n        if(result[\"deleteSuccess\"]){\n          this.eventObj.registered = this.registered = false;\n        } \n\n      });\n      \n    });\n\n    \n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJteS1yZWdpc3RlcmVkLWV2ZW50cy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit, ViewChild, Inject, LOCALE_ID } from '@angular/core';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertController, ModalController } from '@ionic/angular';\nimport { formatDate } from '@angular/common';\nimport { EventModalPage } from '../event-modal/event-modal.page';\nimport { AnonymousSubject } from 'rxjs/internal/Subject';\n\n\n@Component({\n  selector: 'app-my-registered-events',\n  templateUrl: './my-registered-events.page.html',\n  styleUrls: ['./my-registered-events.page.scss'],\n})\nexport class MyRegisteredEventsPage{\n\n  // arrays to hold all events, your registered events, registered past events, and registered future events, \n  eventList = [];\n  myEvents = [];\n  pastEvents = [];\n  futureEvents = [];\n\n  // boolean variables for checks to display no events message on the HTML file \n  noFutureEvents: any;\n  noPastEvents: any;\n  noEvents: any;\n  gotAllEvents: any;\n\n  // date to sort events into past/future\n  today = new Date(Date.now());\n\n  type: string; // used to initialize tab to the view all page \n\n  constructor(private router: Router, private route: ActivatedRoute, public http: HttpClient,private alertCtrl: AlertController,\n    @Inject(LOCALE_ID) private locale: string,private modalCtrl: ModalController) { \n      \n      this.route.queryParams.subscribe(params => {\n        if (this.router.getCurrentNavigation().extras.state) {\n          this.eventList = this.router.getCurrentNavigation().extras.state.events;\n          for(var i = 0; i < this.eventList.length; i++){\n            this.registeredForEvent(i);\n          }\n        }\n    });\n\n    this.type = \"all\";\n  }\n\n\n  registeredForEvent(num){\n    \n    if(this.eventList[num].registered){\n      this.myEvents.push(this.eventList[num]);\n    }\n\n    if(num == (this.eventList.length - 1)){\n      this.gotAllEvents = true;\n\n      this.myEvents = this.myEvents.sort((a, b) => b.date - a.date);\n      \n      this.getAllEvents();\n      this.sortEvents();\n    } \n\n  }\n\n  getAllEvents(){\n    return this.myEvents;\n  }\n\n  sortEvents(){\n\n    for(var i = 0; i < this.myEvents.length; i++){\n      // turns the event date into a date format\n      var tempDate = new Date(this.myEvents[i].startTime);\n\n      // if statement to sort through events into past and future arrays \n      if(tempDate >= this.today){\n        this.futureEvents.push(this.myEvents[i]);\n      }else{\n        this.pastEvents.unshift(this.myEvents[i]);\n      }\n    }\n    \n    // checks to see if any event arrays are empty by checking if length  == 0 to display no events message\n    if(this.myEvents.length == 0){\n      this.noEvents = \"No registered events.\";\n    }else{\n      this.noEvents = null;\n    }\n    \n    if(this.futureEvents.length == 0){\n      this.noFutureEvents = \"No upcoming registered events.\";\n    }else{\n      this.noFutureEvents = null;\n    }\n    \n    if(this.pastEvents.length == 0){\n      this.noPastEvents = \"No registered past events.\";\n    }else{\n      this.noPastEvents = null;\n    }\n\n  }\n\n\n  // opens up event-modal for the selected event, called the same way as it is being called on the schedule page\n  async onEventSelected(event) {\n\n    let date = formatDate(event.startTime, 'MMM d, yyyy', this.locale);\n    let start = formatDate(event.startTime, 'h:mma', this.locale);\n    let end = formatDate(event.endTime, 'h:mma', this.locale);\n    const modal = await this.modalCtrl.create({\n      component: EventModalPage,\n      componentProps:{\n        eventObj: event,\n        eventName: event.title,\n        eventTime: date + '    '  + start + ' - ' + end,\n        eventDescription: event.desc,\n        eventID: event.ID,\n        registered: event.registered\n      }\n    });\n   \n    await modal.present();\n\n  }\n\n}\n","export default \".subtitle {\\n  position: absolute;\\n  top: 8px;\\n  font-size: 80%;\\n  padding-right: 20%;\\n  word-wrap: break-word;\\n  width: 11em;\\n}\\n\\n.validation-errors {\\n  color: red;\\n  margin: 10px;\\n  font-size: 75%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2V2ZW50LW1vZGFsLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0VBQ0EsUUFBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtFQUNBLHFCQUFBO0VBQ0EsV0FBQTtBQUNKOztBQUdFO0VBQ0UsVUFBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0FBQUoiLCJmaWxlIjoiZXZlbnQtbW9kYWwucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnN1YnRpdGxlIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA4cHg7XG4gICAgZm9udC1zaXplOiA4MCU7XG4gICAgcGFkZGluZy1yaWdodDogMjAlO1xuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgICB3aWR0aDogMTFlbTsgXG4gICAgLy8gYm9yZGVyOiAxcHggc29saWQgIzAwMDAwMDtcbiAgfVxuXG4gIC52YWxpZGF0aW9uLWVycm9yc3tcbiAgICBjb2xvcjogcmVkOyBcbiAgICBtYXJnaW46IDEwcHg7XG4gICAgZm9udC1zaXplOiA3NSU7XG59XG5cbi8vICAgLm1vZGFsLWJvZHkgcCB7XG4vLyAgICAgd29yZC13cmFwOiBicmVhay13b3JkO1xuLy8gfSJdfQ== */\";"]}