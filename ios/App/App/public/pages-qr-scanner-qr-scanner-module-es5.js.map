{"version":3,"sources":["webpack:///src/app/pages/qr-scanner/qr-scanner.page.html","webpack:///src/app/pages/qr-scanner/qr-scanner.module.ts","webpack:///node_modules/@capacitor-community/barcode-scanner/dist/esm/index.js","webpack:///node_modules/@capacitor-community/barcode-scanner/dist/esm/definitions.js","webpack:///src/app/pages/qr-scanner/qr-scanner-routing.module.ts","webpack:///src/app/pages/qr-scanner/qr-scanner.page.scss","webpack:///src/app/pages/qr-scanner/qr-scanner.page.ts"],"names":["QrScannerPageModule","imports","forRoot","declarations","BarcodeScanner","web","then","m","BarcodeScannerWeb","SupportedFormat","routes","path","component","QrScannerPageRoutingModule","forChild","exports","QrScannerPage","http","storage","scanActive","get","val","usrID","prepare","stopScan","checkPermission","force","status","granted","denied","c","confirm","openAppSettings","neverAsked","restricted","unknown","statusRequest","grantPerms","startScan","targetedFormats","QR_CODE","result","hasContent","obj","func","eventID","content","userID","attendance","post","JSON","stringify","subscribe","data","response","scanBarcode","console","log","selector","template"],"mappings":"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","file":"pages-qr-scanner-qr-scanner-module-es5.js","sourcesContent":["export default \"<ion-header [hidden]=\\\"scanActive\\\">\\n  <ion-toolbar mode=\\\"ios\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button menu =\\\"main-menu\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      <div class=\\\"ion-text-wrap\\\">\\n        Attendance Scanner\\n      </div>\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [style.--background]=\\\"scanActive ? '#00000000' : '#fff'\\\">\\n  <p class=\\\"ion-text-start\\\" [hidden]=\\\"scanActive\\\">\\n    Here you can use your phone's camera to scan a GreenTCNJ QR code provided by an event organizer to let them know you attended. Make sure you give the app permissions to use your camera!\\n  </p>\\n  <ion-button expand=\\\"full\\\" (click)=\\\"scanBarcode()\\\" [hidden]=\\\"scanActive\\\">\\n    <ion-icon name=\\\"scan\\\" slot=\\\"start\\\"></ion-icon>\\n     Start Scan\\n  </ion-button>\\n\\n  <ion-row class = \\\"scanner-buttons\\\" [hidden]=\\\"!scanActive\\\">\\n    <ion-col class=\\\"ion-no-padding\\\">\\n      <ion-button expand=\\\"full\\\" (click)=\\\"destroy()\\\">\\n        Stop\\n      </ion-button>\\n    </ion-col>\\n  </ion-row>\\n</ion-content>\\n\\n<div class=\\\"scan-box\\\" [hidden]=\\\"!scanActive\\\">\\n</div>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { QrScannerPageRoutingModule } from './qr-scanner-routing.module';\n\nimport { QrScannerPage } from './qr-scanner.page';\n\nimport { IonicStorageModule } from '@ionic/storage';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    IonicStorageModule.forRoot(),\n    QrScannerPageRoutingModule\n  ],\n  declarations: [QrScannerPage]\n})\nexport class QrScannerPageModule {}\n","import { registerPlugin } from '@capacitor/core';\nconst BarcodeScanner = registerPlugin('BarcodeScanner', {\n    web: () => import('./web').then(m => new m.BarcodeScannerWeb()),\n});\nexport * from './definitions';\nexport { BarcodeScanner };\n//# sourceMappingURL=index.js.map","export var SupportedFormat;\n(function (SupportedFormat) {\n    // 1D Product\n    SupportedFormat[\"UPC_A\"] = \"UPC_A\";\n    SupportedFormat[\"UPC_E\"] = \"UPC_E\";\n    SupportedFormat[\"UPC_EAN_EXTENSION\"] = \"UPC_EAN_EXTENSION\";\n    SupportedFormat[\"EAN_8\"] = \"EAN_8\";\n    SupportedFormat[\"EAN_13\"] = \"EAN_13\";\n    // 1D Industrial\n    SupportedFormat[\"CODE_39\"] = \"CODE_39\";\n    SupportedFormat[\"CODE_39_MOD_43\"] = \"CODE_39_MOD_43\";\n    SupportedFormat[\"CODE_93\"] = \"CODE_93\";\n    SupportedFormat[\"CODE_128\"] = \"CODE_128\";\n    SupportedFormat[\"CODABAR\"] = \"CODABAR\";\n    SupportedFormat[\"ITF\"] = \"ITF\";\n    SupportedFormat[\"ITF_14\"] = \"ITF_14\";\n    // 2D\n    SupportedFormat[\"AZTEC\"] = \"AZTEC\";\n    SupportedFormat[\"DATA_MATRIX\"] = \"DATA_MATRIX\";\n    SupportedFormat[\"MAXICODE\"] = \"MAXICODE\";\n    SupportedFormat[\"PDF_417\"] = \"PDF_417\";\n    SupportedFormat[\"QR_CODE\"] = \"QR_CODE\";\n    SupportedFormat[\"RSS_14\"] = \"RSS_14\";\n    SupportedFormat[\"RSS_EXPANDED\"] = \"RSS_EXPANDED\";\n})(SupportedFormat || (SupportedFormat = {}));\n//# sourceMappingURL=definitions.js.map","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { QrScannerPage } from './qr-scanner.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QrScannerPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class QrScannerPageRoutingModule {}\n","export default \"@charset \\\"UTF-8\\\";\\n.scanner-buttons {\\n  margin: 0px;\\n  position: absolute;\\n  bottom: 100px;\\n  width: 100vw;\\n  height: 50px;\\n  z-index: 11;\\n}\\n.scan-box {\\n  border: 2 px solid #fff;\\n  box-shadow: 0 0 0 100vmax rgba(0, 0, 0, 0.5);\\n  content: ‘’;\\n  display: block;\\n  left: 50%;\\n  height: 300px;\\n  position: absolute;\\n  top: 50%;\\n  transform: translate(-50%, -50%);\\n  width: 300px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3FyLXNjYW5uZXIucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQjtBQUFoQjtFQUNJLFdBQUE7RUFDQSxrQkFBQTtFQUNBLGFBQUE7RUFDQSxZQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7QUFFSjtBQUNBO0VBQ0ksdUJBQUE7RUFDQSw0Q0FBQTtFQUNBLFdBQUE7RUFDQSxjQUFBO0VBQ0EsU0FBQTtFQUNBLGFBQUE7RUFDQSxrQkFBQTtFQUNBLFFBQUE7RUFDQSxnQ0FBQTtFQUNBLFlBQUE7QUFFSiIsImZpbGUiOiJxci1zY2FubmVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zY2FubmVyLWJ1dHRvbnMge1xuICAgIG1hcmdpbjogMHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDEwMHB4O1xuICAgIHdpZHRoOiAxMDB2dztcbiAgICBoZWlnaHQ6IDUwcHg7XG4gICAgei1pbmRleDogMTE7XG59XG5cbi5zY2FuLWJveCB7XG4gICAgYm9yZGVyOiAyIHB4IHNvbGlkICNmZmY7XG4gICAgYm94LXNoYWRvdzogMCAwIDAgMTAwdm1heCByZ2JhKDAsIDAsIDAsIDAuNSk7XG4gICAgY29udGVudDog4oCY4oCZO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGxlZnQ6IDUwJTtcbiAgICBoZWlnaHQ6IDMwMHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICB3aWR0aDogMzAwcHg7XG59XG4iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { BarcodeScanner, SupportedFormat } from '@capacitor-community/barcode-scanner';\nimport { HttpClient} from '@angular/common/http';\nimport { Storage } from '@ionic/storage';\n//import { stat } from 'fs';\n\n\n@Component({\n  selector: 'app-qr-scanner',\n  templateUrl: './qr-scanner.page.html',\n  styleUrls: ['./qr-scanner.page.scss'],\n})\nexport class QrScannerPage {\n//implements OnInit {\n\n  // ngOnInit() {\n  // }\n\n  scannedData: any;\n  encodedData: '';\n  encodeData: any;\n  inputData: any;\n  usrID: any;\n\n  scanActive = false;\n\n  constructor(public http: HttpClient,  private storage: Storage) {\n    storage.get('userID').then((val) => {\n      this.usrID = val;\n    });\n    //this.scanBarcode();\n  }\n\n  prepare(){\n    BarcodeScanner.prepare();\n  }\n\n  destroy(){\n    BarcodeScanner.stopScan();\n    this.scanActive = false;\n  }\n\n  async grantPerms(){\n    const status = await BarcodeScanner.checkPermission({force: false});\n\n    if (status.granted){\n      //granted permission to use camera\n      return true;\n    }\n\n    if (status.denied) {\n      // the user denied permission for good\n      // redirect user to app settings if they want to grant it anyway\n      const c = confirm(\n        'If you want to grant permission for using your camera, enable it in the app settings.',\n      );\n      if (c) {\n        BarcodeScanner.openAppSettings();\n      }\n    }\n  \n    if (status.neverAsked) {\n      // user has not been requested this permission before\n      // it is advised to show the user some sort of prompt\n      // this way you will not waste your only chance to ask for the permission\n      const c = confirm(\n        'We need your permission to use your camera to be able to scan barcodes',\n      );\n      if (!c) {\n        return false;\n      }\n    }\n  \n    if (status.restricted || status.unknown) {\n      // ios only\n      // probably means the permission has been denied\n      return false;\n    }\n  \n    // user has not denied permission\n    // but the user also has not yet granted the permission\n    // so request it\n    const statusRequest = await BarcodeScanner.checkPermission({ force: true });\n  \n    if (statusRequest.granted) {\n      // the user did grant the permission now\n      return true;\n    }\n  \n    // user did not grant the permission, so he must have declined the request\n    return false;\n  }\n\n  async scanBarcode(){\n    if(this.grantPerms()){\n      this.scanActive = true;\n      const result = await BarcodeScanner.startScan({ targetedFormats: [SupportedFormat.QR_CODE] });\n      if (result.hasContent){\n        var obj = {func: \"add_participant\", eventID: result.content, userID: this.usrID, attendance: 1};\n        this.http.post(\"https://recycle.hpc.tcnj.edu/php/participants-handler.php\", JSON.stringify(obj)).subscribe(data => {\n          var response = data as any[];\n        });\n        if(confirm(\"Your code was read successfully! Did you want to scan again?\")){\n          this.scanBarcode();\n        }\n        else{\n          this.scanActive = false;\n        }\n      }\n      else {\n        console.log(\"Nothing read from QR Code\");\n        if(confirm(\"Sorry, nothing was read from that code! Try again?\")){\n          this.scanBarcode();\n        }\n        else{\n          this.scanActive = false;\n        }\n      }\n    }\n    else{\n      const c = confirm(\n        'If you want to grant permission for using your camera, enable it in the app settings.'\n      );\n      if (c){\n        BarcodeScanner.openAppSettings();\n      }\n    }\n  }\n}\n"]}