{"version":3,"sources":["webpack:///src/app/pages/registration/registration.page.html","webpack:///src/app/pages/registration/registration-routing.module.ts","webpack:///src/app/pages/registration/registration.page.scss","webpack:///src/app/pages/registration/registration.page.ts","webpack:///src/app/pages/registration/registration.module.ts"],"names":["routes","path","component","RegistrationPageRoutingModule","imports","forChild","exports","RegistrationPage","router","http","formBuilder","customValidator","alertCtrl","invalidRegistration","userVerified","form","val","isChecked","validation_messages","type","message","signupForm","group","firstName","compose","maxLength","pattern","required","lastName","email","password","minLength","passwordRepeat","userType","validator","passwordMatchValidator","temp","recycling","water","pollution","energy","buttonDisabled","valid","console","log","value","pwd","pwdRepeat","first","last","obj","func","userInterests","post","JSON","stringify","subscribe","data","result","successAlert","navigateToLogin","failAlert","create","header","buttons","alert","present","msg","x","navigateByUrl","formInput","controls","hasError","slides","slideNext","lockSwipeToNext","e","currentTarget","name","setRecycleInterest","checked","setWaterInterest","setPollutionInterest","setEnergyInterest","selector","template","RegistrationPageModule","declarations"],"mappings":"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","file":"pages-registration-registration-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar mode=\\\"ios\\\">\\n    <ion-title>\\n      Register\\n    </ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/start\\\"></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <form [formGroup]=\\\"signupForm\\\" (ngSubmit)=\\\"trySignup()\\\">\\n  <ion-slides [options]=\\\"{onlyExternal: true}\\\" pager=\\\"false\\\">\\n\\n  <ion-slide>\\n  <ion-list>\\n\\n\\n<!-- signupForm is the label that corresponds with the form in the ts files -->\\n\\n\\n    <!-- Collects First Name and stores it into the form, this field is required -->\\n    <br>\\n    <ion-item lines=\\\"full\\\">\\n      <ion-img alt=\\\"\\\" class=\\\"center\\\" src=\\\"../../assets/icon/icon.png\\\" vertical-align=\\\"middle\\\"></ion-img>\\n      <ion-label position=\\\"floating\\\">First name</ion-label>\\n      <ion-input autocapitalize=\\\"words\\\" formControlName=\\\"firstName\\\" type=\\\"text\\\" required></ion-input>\\n    </ion-item> \\n\\n    <!-- Error checking: checks to see if a valid name is entered (no numbers) and that it is less than 30 characters -->\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.firstName\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"signupForm.get('firstName').hasError(validation.type) && (signupForm.get('firstName').dirty || signupForm.get('firstName').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n    <!-- Collects Last Name and stores it into the form, this field is required -->\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Last name</ion-label>\\n      <ion-input autocapitalize=\\\"words\\\" formControlName=\\\"lastName\\\" type=\\\"text\\\" required></ion-input>\\n    </ion-item>\\n\\n    <!-- Error checking: checks to see if a valid name is entered (no numbers) and that it is less than 30 characters -->\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.lastName\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"signupForm.get('lastName').hasError(validation.type) && (signupForm.get('lastName').dirty || signupForm.get('lastName').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Email</ion-label>\\n      <ion-input  formControlName=\\\"email\\\" type=\\\"text\\\" required></ion-input>\\n    </ion-item>\\n\\n    <!-- Error checking: checks to see if a valid email is entered (correct email format aaa@bbb.ccc) and that it is less than 30 characters -->\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"signupForm.get('email').hasError(validation.type) && (signupForm.get('email').dirty || signupForm.get('email').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <!-- <ion-label position=\\\"floating\\\">Password\\n        <span *ngIf=\\\"formInputIsRequired('password')\\\" class=\\\"required\\\">Please chose an email separate from your TCNJ credentials</span>\\n      </ion-label> -->\\n\\n      <ion-label position=\\\"floating\\\">Password\\n        <span *ngIf=\\\"formInputIsRequired('password')\\\" class=\\\"required\\\" class=\\\"pwDisclaimer\\\">&#42;please do not use your TCNJ password</span>\\n      </ion-label>\\n      \\n      <!-- <ion-label position=\\\"floating\\\" class=\\\"pwDisclaimer\\\">*separate from your TCNJ credentials</ion-label> -->\\n      <ion-input  formControlName=\\\"password\\\" type=\\\"password\\\" required></ion-input>\\n    </ion-item>\\n\\n  <!-- Error checking: checks to see if a password is entered as it is a required field -->\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"signupForm.get('password').hasError(validation.type) && (signupForm.get('password').dirty || signupForm.get('password').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n    <ion-item lines=\\\"full\\\" type=\\\"submit\\\">\\n      <ion-label position=\\\"floating\\\">Confirm Password</ion-label>\\n      <ion-input  formControlName=\\\"passwordRepeat\\\" type=\\\"password\\\" required></ion-input>\\n\\n    </ion-item>\\n\\n\\n    <div class=\\\"validation-errors\\\">\\n      <div class=\\\"error-message\\\"\\n        *ngIf=\\\"signupForm.get('passwordRepeat').hasError('passwordMismatch')\\\">\\n      Passwords Don't Match\\n      </div>\\n    </div>\\n\\n    <ion-list> \\n    \\n      <ion-item type=\\\"submit\\\">\\n        <ion-label>Type of User</ion-label>\\n        <ion-select formControlName=\\\"userType\\\" placeholder=\\\"Select One\\\" type=\\\"submit\\\" required>\\n          <ion-select-option aria-selected=\\\"false\\\" aria-controls=\\\"Student\\\" value=\\\"Student\\\">Student</ion-select-option>\\n          <ion-select-option aria-selected=\\\"false\\\" aria-controls=\\\"Faculty\\\" value=\\\"Faculty\\\">Faculty</ion-select-option>\\n          <ion-select-option aria-selected=\\\"false\\\" aria-controls=\\\"Staff\\\" value=\\\"Staff\\\">Staff</ion-select-option>\\n          <ion-select-option aria-selected=\\\"false\\\" aria-controls=\\\"Visitor\\\" value=\\\"Visitor\\\">Visitor</ion-select-option>\\n          <ion-select-option aria-selected=\\\"false\\\" aria-controls=\\\"Community Member\\\" value=\\\"Community Member\\\">Community Member</ion-select-option>\\n          <ion-select-option aria-selected=\\\"false\\\" aria-controls=\\\"Outreach Partner\\\" value=\\\"Outreach Partner\\\">Outreach Partner</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n    \\n    </ion-list>\\n\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.userType\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"signupForm.get('userType').hasError(validation.type) && (signupForm.get('userType').dirty || signupForm.get('userType').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n    <ion-row>\\n      <ion-col>\\n\\n        <div class=\\\"validation-errors\\\">\\n          <span *ngIf=\\\"registrationFailure()\\\">Email is allready in use.</span>        \\n        </div>\\n      <!-- <ion-button type=\\\"submit\\\" color=\\\"danger\\\" expand=\\\"block\\\">Sign Up</ion-button> -->\\n      <ion-button aria-label=\\\"Next\\\" [disabled]=\\\"!signupForm.valid\\\" [color]=\\\"isDisabled? 'danger':'primary'\\\" (click)=\\\"next()\\\">Next</ion-button>\\n      <br>\\n      <br>\\n        \\n      </ion-col>\\n    </ion-row>\\n    <!-- </form> -->\\n\\n  </ion-list>\\n\\n  </ion-slide>\\n\\n  <ion-slide>\\n\\n    <ion-list>\\n      <br>\\n      <ion-item lines=\\\"full\\\">\\n        <ion-img class=\\\"center\\\" src=\\\"../../assets/RecyclingRoscoeSquare.png\\\" vertical-align=\\\"middle\\\"></ion-img>\\n      </ion-item> \\n      <br>\\n\\n\\n      <ion-list-header>\\n        <ion-label>\\n          <h1> Please select the topics that interest you!</h1>\\n        </ion-label>\\n      </ion-list-header>\\n      <br>\\n    \\n      <!-- <p>test</p>\\n      <ion-item *ngFor=\\\"let entry of form\\\">\\n        <ion-label>{{entry.val}}</ion-label>\\n        <ion-checkbox slot=\\\"end\\\" [(ngModel)]=\\\"entry.isChecked\\\"></ion-checkbox>\\n      </ion-item>\\n      <p>test</p> -->\\n\\n      <ion-item>\\n        <ion-checkbox slot=\\\"start\\\" (ionChange)=\\\"addValue($event)\\\"></ion-checkbox>\\n        <ion-label>Recycling</ion-label>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-checkbox slot=\\\"start\\\" (ionChange)=\\\"addValue($event)\\\"></ion-checkbox>\\n        <ion-label>Water Conservation</ion-label>\\n      </ion-item>\\n\\n      <ion-item>\\n      <ion-checkbox slot=\\\"start\\\" (ionChange)=\\\"addValue($event)\\\"></ion-checkbox>\\n        <ion-label>Pollution Prevention</ion-label>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-checkbox  slot=\\\"start\\\" (ionChange)=\\\"addValue($event)\\\"></ion-checkbox>\\n        <ion-label>Energy</ion-label>\\n      </ion-item>\\n      <br>\\n\\n    <!-- <ion-button [routerLink]=\\\"['/login']\\\" expand=\\\"block\\\" color=\\\"danger\\\">Submit</ion-button> -->\\n\\n    <ion-button aria-label=\\\"Sign up\\\" type=\\\"submit\\\" color=\\\"success\\\" expand=\\\"block\\\">Sign Up</ion-button>   \\n\\n    </ion-list>                   \\n\\n  </ion-slide>\\n \\n</ion-slides>\\n</form> \\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegistrationPage } from './registration.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegistrationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegistrationPageRoutingModule {}\n","export default \".validation-errors {\\n  color: red;\\n  margin: 5px;\\n  font-size: 75%;\\n}\\n\\n.pwDisclaimer {\\n  color: red;\\n  font-size: 60%;\\n}\\n\\nion-img.center {\\n  height: 25vh;\\n  width: auto;\\n  display: block;\\n  margin: 0 auto;\\n}\\n\\n.slider {\\n  position: absolute !important;\\n  top: 0 !important;\\n  bottom: 0 !important;\\n  right: 0 !important;\\n  left: 0 !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3JlZ2lzdHJhdGlvbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxVQUFBO0VBQ0EsV0FBQTtFQUNBLGNBQUE7QUFDSjs7QUFFQTtFQUNJLFVBQUE7RUFFQSxjQUFBO0FBQUo7O0FBR0E7RUFDSSxZQUFBO0VBQ0EsV0FBQTtFQUNBLGNBQUE7RUFDQSxjQUFBO0FBQUo7O0FBWUE7RUFDSSw2QkFBQTtFQUNBLGlCQUFBO0VBQ0Esb0JBQUE7RUFDQSxtQkFBQTtFQUNBLGtCQUFBO0FBVEoiLCJmaWxlIjoicmVnaXN0cmF0aW9uLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi52YWxpZGF0aW9uLWVycm9yc3tcbiAgICBjb2xvcjogcmVkOyBcbiAgICBtYXJnaW46IDVweDtcbiAgICBmb250LXNpemU6IDc1JTtcbn1cblxuLnB3RGlzY2xhaW1lcntcbiAgICBjb2xvcjogcmVkOyBcbiAgIC8vIG1hcmdpbjogNXB4O1xuICAgIGZvbnQtc2l6ZTogNjAlO1xufVxuXG5pb24taW1nLmNlbnRlciB7XG4gICAgaGVpZ2h0OiAyNXZoO1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbjogMCBhdXRvO1xufVxuXG4vLyBpb24tc2xpZGVzLCBpb24tc2xpZGUge1xuLy8gICAgIC8vaGVpZ2h0OiAxMDAlO1xuLy8gICAgLy8gd2lkdGg6IGF1dG87XG4vLyAvLyAgICB3aWR0aDogMTAwdnc7XG4vLyAvLyAgICBoZWlnaHQ6IDEwMHZoO1xuLy8gICAgIC8vIC0tYnVsbGV0LWJhY2tncm91bmQtYWN0aXZlOiByZ2IoNCwgMjUyLCAxMjgpO1xuLy8gICAgIC8vIC0tYnVsbGV0LWJhY2tncm91bmQ6ICMwMDA7XG4vLyB9XG5cbi5zbGlkZXJ7XG4gICAgcG9zaXRpb246IGFic29sdXRlICFpbXBvcnRhbnQ7XG4gICAgdG9wOiAwICFpbXBvcnRhbnQ7XG4gICAgYm90dG9tOiAwICFpbXBvcnRhbnQ7XG4gICAgcmlnaHQ6IDAgIWltcG9ydGFudDtcbiAgICBsZWZ0OiAwICFpbXBvcnRhbnQ7XG4gIH1cbiJdfQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from \"@angular/forms\";\nimport { HttpClient} from '@angular/common/http';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { CustomValidationService } from 'src/app/services/custom-validation.service';\nimport { IonSlides } from '@ionic/angular';\nimport { AlertController, LoadingController } from '@ionic/angular';\nimport { Alert } from 'selenium-webdriver';\n\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.page.html',\n  styleUrls: ['./registration.page.scss'],\n})\nexport class RegistrationPage implements OnInit{\n\n  @ViewChild(IonSlides)slides: IonSlides;\n  signupForm: FormGroup;\n  myControl: FormControl;\n  invalidRegistration: boolean = false;\n  tempTest: {recycling_interest: boolean, water_interest: boolean, pollution_interest: boolean, energy_interest: boolean};\n  temp: {recycling: any, water: any, pollution: any, energy: any};\n  testing: boolean[];\n  buttonDisabled: any;\n  userVerified = false;\n\n  \n\n  ngOnInit() {\n  }\n\n    // thses are currently not being stored anywhere they are just in place to select after registration, will connect to db next semester \n    public form = [\n      { val: 'Recycling', isChecked: false },\n      { val: 'Water Conservation', isChecked: false },\n      { val: 'Pollution Prevention', isChecked: false },\n      { val: 'Energy', isChecked: false }\n    ];\n\n  constructor(private router: Router, public http: HttpClient, public formBuilder: FormBuilder, private customValidator: CustomValidationService, private alertCtrl: AlertController) {\n    this.signupForm = formBuilder.group({\n        firstName: ['', Validators.compose([Validators.maxLength(30), Validators.pattern('[a-zA-Z ]*'), Validators.required])],\n        lastName: ['', Validators.compose([Validators.maxLength(30), Validators.pattern('[a-zA-Z ]*'), Validators.required])],\n        email: ['', Validators.compose([Validators.maxLength(30), Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\"), Validators.required])],\n        // https://stackoverflow.com/questions/48350506/how-to-validate-password-strength-with-angular-5-validator-pattern\n        password: ['', Validators.compose([Validators.maxLength(30), Validators.minLength(8),Validators.pattern('(?=\\\\D*\\\\d)(?=[^a-z]*[a-z])(?=[^A-Z]*[A-Z]).{8,30}'), Validators.required])],\n        passwordRepeat: ['', Validators.compose([Validators.maxLength(30), Validators.required])],\n        userType: ['', Validators.compose([Validators.required])]\n        // userInterests: [\n        //   { val: 'Recycling', isChecked: false },\n        //   { val: 'Water Conservation', isChecked: false },\n        //   { val: 'Pollution Prevention', isChecked: false },\n        //   { val: 'Energy', isChecked: false }\n        // ]\n\n    }, {validator: this.customValidator.passwordMatchValidator('password', 'passwordRepeat')} );\n\n    // initialized to all 0s for false\n    this.temp = {\n      recycling: 0, \n      water: 0, \n      pollution: 0, \n      energy: 0\n    };\n    this.buttonDisabled = true;\n   // this.slides.lockSwipeToNext(true); \n   if(!this.signupForm.valid){\n    console.log(\"INVALID\");\n    this.buttonDisabled = true;\n    \n  }\n  else{\n    console.log(\"VALID\");\n    this.buttonDisabled = false;\n  }\n  \n  }\n\n  // responsible for printing error messages to the screen based on validator \n  validation_messages = {\n    'firstName':[\n      { type: 'maxlength', message: 'Your first name cannot be more than 30 characters long.'},\n      { type: 'required', message: 'A first name is required.' },\n      { type: 'pattern', message: 'You must enter a valid first name' }\n    ],\n    'lastName':[\n      { type: 'maxlength', message: 'Your last name cannot be more than 30 characters long.'},\n      { type: 'required', message: 'A last name is required.' },\n      { type: 'pattern', message: 'You must enter a valid last name' }\n    ],\n    'email': [\n        { type: 'maxlength', message: 'Your email cannot be more than 30 characters long.' },\n        { type: 'required', message: 'An email is required.' },\n        { type: 'pattern', message: 'You must enter a valid email.' }\n      ],\n      'password': [\n        { type: 'minlength', message: 'Your password must be at least 8 characters long.'},\n        { type: 'pattern', message: 'Your password must include 1 uppercase letter, 1 lowercase letter, and one number' },\n        { type: 'maxlength', message: 'Your last name cannot be more than 30 characters long.'},\n        { type: 'required', message: 'A password is required.' }\n      ],\n      'passwordRepeat': [\n        //{ type: 'required', message: 'A password is required.' }\n      ],\n      'userType': [\n        { type: 'required', message: 'A user type is required.' }\n      ]\n    }\n\n  trySignup(){\n\n    if(!this.signupForm.valid){\n      console.log(\"INVALID\");\n      this.buttonDisabled = true;\n      \n    }\n    else{\n      console.log(\"VALID\");\n      this.buttonDisabled = false;\n\n      var email = this.signupForm.value['email'];\n      var pwd = this.signupForm.value['password'];\n      var pwdRepeat = this.signupForm.value['passwordRepeat'];\n      var first = this.signupForm.value['firstName'];\n      var last = this.signupForm.value['lastName'];\n      var type = this.signupForm.value['userType'];\n\n      var obj = {func: \"add_user2\", email: email, password: pwd, passwordRepeat: pwdRepeat, firstName: first, lastName: last, userType: type, userInterests: this.temp};\n\n      //checking to see if user exists in users table (verified users)\n      this.http.post(\"https://recycle.hpc.tcnj.edu/php/users-handler.php\", JSON.stringify(obj)).subscribe(data => {\n\n          var result = data as any[];\n  \n          if(result[\"addSuccess\"]){\n            // output to user it succeeded and move to next page\n            console.log(\"Signup SUCCESS\");\n            this.invalidRegistration = false;\n            this.successAlert(email);\n            this.navigateToLogin();\n          }\n          else if(result[\"missingInput\"]){\n            console.log(\"Missing Input\");\n            this.failAlert(\"ERROR: Server Missing Input\");\n            this.invalidRegistration = true;\n            this.buttonDisabled = true;\n          }\n          else if(result[\"passwordMismatch\"]){\n            console.log(\"passwords didnt match\");\n            this.failAlert(\"ERROR: Passwords do not match\");\n            this.invalidRegistration = true;\n            this.buttonDisabled = true;\n          }\n          else if(result[\"userExists\"]){\n            this.userVerified = true;\n            console.log(\"verified user exists\");\n            this.failAlert(\"ERROR: A verified account with that email already exists! If you can't remember your password, reset it on the sign in page.\");\n            this.invalidRegistration = true;\n            this.buttonDisabled = true;\n          }\n          else if(result[\"unverifiedExists\"]){\n            console.log(\"unverified user exists\");\n            this.failAlert(\"ERROR: An unverified account with that email already exists! Check your inbox for the verification email.\");\n            this.invalidRegistration = true;\n            this.buttonDisabled = true;\n          }\n          else{\n            // dont move to next page and output error message \"Email or password entered was incorrect\"\n            console.log(\"Signup failure on server\");\n            this.failAlert(\"ERROR: Signup failure. If this issue persists, please contact an administrator.\");\n            this.invalidRegistration = true;\n          }\n      });\n\n    }\n    \n  }\n\n  async successAlert(email : string){\n\n    var obj = {func: \"generate_confirmation\", email: email};\n    this.http.post(\"https://recycle.hpc.tcnj.edu/php/verify-email-handler.php\", JSON.stringify(obj)).subscribe(data => {\n      console.log(\"sent confirmation email\");\n    });\n\n    const alert = await this.alertCtrl.create({\n      header: 'Registration Success!',\n      message: 'Please verify your account with the email we sent you!',\n      buttons: ['OK'],\n    });\n\n    await alert.present();\n\n  }\n\n  async failAlert(msg: string){\n    const alert = await this.alertCtrl.create({\n      header: 'Registration Failed',\n      message: msg,\n      buttons: ['OK'],\n    });\n\n    await alert.present();\n\n  }\n\n\n  setRecycleInterest(x){\n    if(x){\n      this.temp.recycling = 1;\n    }else{\n      this.temp.recycling = 0;\n    } \n  }\n\n  setWaterInterest(x){\n    if(x){\n      this.temp.water = 1;\n    }else{\n      this.temp.water = 0;\n    } \n  }\n\n  setPollutionInterest(x){\n    if(x){\n      this.temp.pollution = 1;\n    }else{\n      this.temp.pollution = 0;\n    } \n  }\n\n  setEnergyInterest(x){\n    if(x){\n      this.temp.energy = 1;\n    }else{\n      this.temp.energy = 0;\n    } \n  }\n\n\n  navigateToLogin() {\n    this.router.navigateByUrl('/login');\n }\n\n registrationFailure(){\n\n  return this.invalidRegistration;\n\n}\n\nformInputIsRequired(formInput: string) {\n  if (this.signupForm.controls[formInput]) {\n    if (this.signupForm.controls[formInput].hasError('required')) {\n      return true;\n    }\n  }\n  return false;\n}\n\nnext() {\n  if(this.signupForm.valid){\n    this.slides.slideNext();\n  }\n  \n}\n\nfillForm(){\n  if(this.signupForm.valid){\n    this.slides.lockSwipeToNext(false);\n  }else{\n    this.slides.lockSwipeToNext(true);\n  }\n}\n\naddValue(e): void {\n\n    if(e.currentTarget.name == \"ion-cb-0\"){\n      this.setRecycleInterest(e.currentTarget.checked);\n    }\n\n    if(e.currentTarget.name == \"ion-cb-1\"){\n      this.setWaterInterest(e.currentTarget.checked);\n    }\n\n    if(e.currentTarget.name == \"ion-cb-2\"){\n      this.setPollutionInterest(e.currentTarget.checked);\n    }\n\n    if(e.currentTarget.name == \"ion-cb-3\"){\n      this.setEnergyInterest(e.currentTarget.checked);\n    }\n}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegistrationPageRoutingModule } from './registration-routing.module';\n\nimport { RegistrationPage } from './registration.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RegistrationPageRoutingModule\n  ],\n  declarations: [RegistrationPage]\n})\nexport class RegistrationPageModule {}\n"]}