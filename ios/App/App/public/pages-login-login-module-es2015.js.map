{"version":3,"sources":["./src/app/pages/login/login.module.ts","./src/app/pages/login/login.page.scss","./src/app/pages/login/login.page.html","./src/app/pages/login/login-routing.module.ts","./src/app/pages/login/login.page.ts"],"names":[],"mappings":"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","file":"pages-login-login-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\nimport { IonicStorageModule } from '@ionic/storage';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    IonicStorageModule.forRoot(),\n    ReactiveFormsModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \".validation-errors {\\n  color: red;\\n  margin: 10px;\\n  font-size: 75%;\\n}\\n\\nimg.center {\\n  height: 25vh;\\n  width: auto;\\n  display: block;\\n  margin: 0 auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xvZ2luLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFVBQUE7RUFDQSxZQUFBO0VBQ0EsY0FBQTtBQUNKOztBQUVBO0VBQ0ksWUFBQTtFQUNBLFdBQUE7RUFDQSxjQUFBO0VBQ0EsY0FBQTtBQUNKIiwiZmlsZSI6ImxvZ2luLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi52YWxpZGF0aW9uLWVycm9yc3tcbiAgICBjb2xvcjogcmVkOyBcbiAgICBtYXJnaW46IDEwcHg7XG4gICAgZm9udC1zaXplOiA3NSU7XG59XG5cbmltZy5jZW50ZXIge1xuICAgIGhlaWdodDogMjV2aDtcbiAgICB3aWR0aDogYXV0bztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW46IDAgYXV0bztcbn1cbiJdfQ== */\";","export default \"<!-- This page is responsible for the login page -->\\n<ion-header>\\n  <ion-toolbar mode=\\\"ios\\\">\\n    <ion-title >\\n      Log In\\n    </ion-title>\\n    <!-- has a back button to be able to go back to the start page in the event that they need to register rather than sign up -->\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/start\\\"></ion-back-button>\\n    </ion-buttons>\\n    \\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n<!-- This is added to space out the image so it is in the center of the screen -->\\n<ion-grid>\\n  <ion-row>\\n      <ion-col>\\n        <!-- <ion-img [src]=\\\"assets/logo\\\" alt=\\\"logo-image\\\"></ion-img> -->\\n        <img alt=\\\"\\\" class=\\\"center\\\" src=\\\"../../assets/icon/icon.png\\\" vertical-align=\\\"middle\\\">\\n      </ion-col>\\n </ion-row>\\n</ion-grid>\\n\\n  <!-- The required elements will not proceed unless they are filled out  -->\\n  <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Email\\n        <span *ngIf=\\\"formInputIsRequired('email')\\\" class=\\\"required\\\">&#42;</span>\\n      </ion-label>\\n      <ion-input formControlName=\\\"email\\\" type=\\\"text\\\" required></ion-input>\\n    </ion-item>\\n\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"loginForm.get('email').hasError(validation.type) && (loginForm.get('email').dirty || loginForm.get('email').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n    <!-- type password allows it to appear encrypted and not be visible upon entering -->\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Password</ion-label>\\n      <ion-input formControlName=\\\"password\\\" type=\\\"password\\\" required></ion-input>\\n    </ion-item>\\n\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"loginForm.get('password').hasError(validation.type) && (loginForm.get('password').dirty || loginForm.get('password').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n    <ion-row>\\n      <ion-col>\\n        <div class=\\\"validation-errors\\\">\\n          <span *ngIf=\\\"loginFailure()\\\">Email or password entered was incorrect</span>        \\n        </div>\\n        <ion-button aria-label=\\\"Login\\\" type=\\\"submit\\\" color=\\\"success\\\" expand=\\\"block\\\" (click)=\\\"checkValidLogin()\\\">Login</ion-button>\\n      </ion-col>\\n    </ion-row>\\n\\n    <ion-item lines=\\\"none\\\" class=\\\"ion-no-padding\\\">\\n      <a style=\\\"margin: 0 auto; padding: 0 auto;\\\" [routerLink]=\\\"['/recover-password']\\\" class=\\\"small-text\\\">Forgot Password?</a>\\n    </ion-item>\\n\\n  </form>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport { NavController } from '@ionic/angular'; \nimport { FormGroup, FormBuilder, Validators, FormControl } from \"@angular/forms\";\nimport { Router, NavigationExtras } from '@angular/router';\nimport { AlertController, LoadingController } from '@ionic/angular';\nimport { AuthenticationService } from './../../services/authentication.service';\nimport {  MenuController } from '@ionic/angular';\n\nimport { Storage } from '@ionic/storage';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\n\nexport class LoginPage {\n  \n  // form input \n  emailInput: string = \"\";\n  passwordInput: string = \"\";\n  \n  // form variables\n  loginForm: FormGroup;\n  myControl: FormControl;\n\n  // boolean values for login checks \n  invalidLogin: boolean = false;\n  pageLoaded: boolean = false;\n  wrongInput: boolean = false;\n  correctInput: boolean = false;\n  missingInput: boolean = false;\n  canLogin: boolean = false;\n\n  constructor(private storage: Storage, public menuCtrl: MenuController, private alertController: AlertController, private authService: AuthenticationService, private router: Router, public http: HttpClient, public navCtrl: NavController, public formBuilder: FormBuilder, private loadingController: LoadingController) {\n    this.loginForm = formBuilder.group({\n        // Require validators for the input fields so we can quickly tell them if their input is valid, the patten string is what characters\n        // are allowed in the field and for email it makes sure there is a @ character and a domain field like .com\n        email: ['', Validators.compose([Validators.maxLength(30), Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\"), Validators.required])],\n        password: ['', Validators.compose([Validators.maxLength(30), Validators.required])]\n    });\n    this.menuCtrl.enable(false);\n  }\n\n  \n\n  // responsible for printing error messages to the screen based on validator \n  validation_messages = {\n    'email': [\n        { type: 'maxlength', message: 'Your email cannot be more than 30 characters long.' },\n        { type: 'pattern', message: 'You must enter a valid email.' }\n      ],\n      'password': [\n        { type: 'required', message: 'A password is required.' }\n      ]\n  }\n\n\ncheckValidLogin(){\n\n  if(!this.loginForm.valid){\n    console.log(\"INVALID\");\n  }else{\n    console.log(\"VALID\");\n\n          // Find a way to get email and password input from user\n          var obj = {func: \"try_login\", email: this.loginForm.value['email'], password: this.loginForm.value['password']};\n          \n          this.http.post(\"https://recycle.hpc.tcnj.edu/php/users-handler.php\", JSON.stringify(obj)).subscribe(data => {\n                \n            var result = data as any[];\n    \n              if(result[\"loginSuccess\"]){\n                this.invalidLogin = false;\n    \n                // this is used to store user info within the app, stores userID, Name, type, and email \n                this.storage.set('userID', result['userInfo']['userID']); \n                this.storage.set('userName', result['userInfo']['userFirstName']);\n                this.storage.set('userType', result['userInfo']['userType']);\n                this.storage.set('userEmail', result[\"userInfo\"][\"userEmail\"]);\n    \n                // used to set user interests within the app\n                this.storage.set('userRecyclingInterest', result[\"userInfo\"][\"recyclingInterest\"]);\n                this.storage.set('userWaterInterest', result[\"userInfo\"][\"waterInterest\"]);\n                this.storage.set('userPollutionInterest', result[\"userInfo\"][\"pollutionInterest\"]);\n                this.storage.set('userEnergyInterest', result[\"userInfo\"][\"energyInterest\"]);\n    \n                this.invalidLogin = false;\n                this.correctInput = true;\n                this.missingInput = false;\n                this.wrongInput = false;\n\n                \n              }else if(result[\"missingInputs\"]){\n                // output error message of missing inputs\n                console.log(\"Missing Input\");\n\n                this.invalidLogin = true;\n                this.correctInput = false;\n                this.missingInput = true;\n                this.wrongInput = false;\n                    \n              }else{\n                // dont move to next page and output error message \"Email or password entered was incorrect\"\n                console.log(\"Email or password was incorrect\");\n \n                this.invalidLogin = true;\n                this.correctInput = false;\n                this.missingInput = false;\n                this.wrongInput = true;      \n              }\n          });\n\n          \n    }\n  this.canLogin  = true;\n  }\n\n  //\n  async login(){\n\n    const loading = await this.loadingController.create();\n    await loading.present();\n    \n    if(!this.loginForm.valid && this.canLogin){\n      console.log(\"INVALID\");\n\n      this.authService.login(this.loginForm.value).subscribe(\n        async (res) => {\n          await loading.dismiss();\n          const alert = await this.alertController.create({\n            header: 'Login failed',\n            message: 'Please enter valid fields.',\n            buttons: ['OK'],\n          });\n          await alert.present();\n        }\n      );\n    }else{\n      console.log(\"VALID\");\n\n      // valid login\n      if(this.loginSuccess() && !this.missingValues() && !this.wrongCredientals() ){\n\n        this.authService.login(this.loginForm.value).subscribe(\n          async (res) => {\n            \n            loading.dismiss();\n            this.invalidLogin = false;\n            this.navigateToHomePage();\n          }\n        );\n\n        this.correctInput = true;\n        this.missingInput = false;\n        this.wrongInput = false;\n\n      // missing input  \n      }else if(!this.loginSuccess() && this.missingValues() && !this.wrongCredientals()){\n\n        console.log(\"Missing Input\");\n        \n        this.authService.login(this.loginForm.value).subscribe(\n          async (res) => {\n            await loading.dismiss();\n            const alert = await this.alertController.create({\n              header: 'Login failed',\n              message: 'You are missing input.',\n              buttons: ['OK'],\n            });\n            await alert.present();\n          }\n        );\n\n        this.correctInput = false;\n        this.missingInput = true;\n        this.wrongInput = false;\n\n      // wrong credentials \n      }else if(!this.loginSuccess() && !this.missingValues() && this.wrongCredientals()){\n        \n        console.log(\"Email or password was incorrect\");\n\n        this.authService.login(this.loginForm.value).subscribe(\n          async (res) => {\n            await loading.dismiss();\n            const alert = await this.alertController.create({\n              header: 'Login failed',\n              message: 'Your email or password was incorrect',\n              buttons: ['OK'],\n            });\n            await alert.present();\n          }\n        );\n\n        this.correctInput = false;\n        this.missingInput = false;\n        this.wrongInput = true;\n\n      // should never resch here   \n      }else{\n        loading.dismiss();\n      }\n\n    }\n     \n  }\n\n  // function to route to the home page after logging in \n  navigateToHomePage() {\n    this.pageLoaded = true;\n    this.menuCtrl.enable(true);\n    this.router.navigate(['/home'], { replaceUrl: true });\n    this.router.navigateByUrl('/home').then(success => console.log(`routing status: ${success}`));\n  }\n\n\n  // used to add * to email and it is removed once something is entered\n  formInputIsRequired(formInput: string) {\n    if (this.loginForm.controls[formInput]) {\n      if (this.loginForm.controls[formInput].hasError('required')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // boolean return values\n  loginFailure(){\n\n    return this.invalidLogin;\n\n  }\n\n  wrongCredientals(){\n\n    return this.wrongInput;\n\n  }\n\n  loginSuccess(){\n\n    return this.correctInput;\n\n  }\n\n  missingValues(){\n\n    return this.missingInput;\n\n  }\n\n}\n"],"sourceRoot":"webpack:///"}