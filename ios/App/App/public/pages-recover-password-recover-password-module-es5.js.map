{"version":3,"sources":["webpack:///src/app/pages/recover-password/recover-password.page.html","webpack:///src/app/pages/recover-password/recover-password.module.ts","webpack:///src/app/pages/recover-password/recover-password.page.ts","webpack:///src/app/pages/recover-password/recover-password-routing.module.ts","webpack:///src/app/pages/recover-password/recover-password.page.scss"],"names":["RecoverPasswordPageModule","imports","declarations","RecoverPasswordPage","router","http","formBuilder","emailInput","emailSent","validation_messages","type","message","emailForm","group","email","compose","maxLength","pattern","required","console","log","value","valid","obj","func","isMobileRequest","post","JSON","stringify","subscribe","data","result","reset","selector","template","routes","path","component","RecoverPasswordPageRoutingModule","forChild","exports"],"mappings":"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","file":"pages-recover-password-recover-password-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title style=\\\"padding: 0;\\\">Reset Your Password</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"emailForm\\\" (ngSubmit)=\\\"checkEmail()\\\">\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Email</ion-label>\\n      <ion-input formControlName=\\\"email\\\" type=\\\"text\\\" required></ion-input>\\n    </ion-item>\\n\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"emailForm.get('email').hasError(validation.type) && (emailForm.get('email').dirty || emailForm.get('email').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n    <ion-row>\\n      <ion-col>\\n        <ion-button aria-label=\\\"Send\\\" type=\\\"submit\\\" color=\\\"success\\\" expand=\\\"block\\\">Send</ion-button>\\n\\n        <div class=\\\"validation-confirmation\\\">\\n          <span *ngIf=\\\"emailFailure()\\\">If an account with that email exists a password reset link has been sent.</span>        \\n        </div>\\n\\n      </ion-col>\\n    </ion-row>\\n\\n\\n    <ion-row>\\n      <ion-col>\\n        <small>\\n          *Please provide your account's email.\\n        </small>         \\n      </ion-col>\\n    </ion-row>\\n\\n  </form>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RecoverPasswordPageRoutingModule } from './recover-password-routing.module';\n\nimport { RecoverPasswordPage } from './recover-password.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RecoverPasswordPageRoutingModule\n  ],\n  declarations: [RecoverPasswordPage]\n})\nexport class RecoverPasswordPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from \"@angular/forms\";\nimport { HttpClient} from '@angular/common/http';\nimport { Router, NavigationExtras } from '@angular/router';\n\n@Component({\n  selector: 'app-recover-password',\n  templateUrl: './recover-password.page.html',\n  styleUrls: ['./recover-password.page.scss'],\n})\nexport class RecoverPasswordPage{\n  emailInput: string = \"\";\n  emailForm: FormGroup;\n  myControl: FormControl;\n  emailSent: boolean = false;\n\n  // firstName: new FormControl()\n\n  constructor(private router: Router, public http: HttpClient, public formBuilder: FormBuilder) {\n    this.emailForm = formBuilder.group({\n        // Require validators for the input fields so we can quickly tell them if their input is valid, the patten string is what characters\n        // are allowed in the field and for email it makes sure there is a @ character and a domain field like .com\n        email: ['', Validators.compose([Validators.maxLength(30), Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\"), Validators.required])],\n    });\n  }\n\n\n    // responsible for printing error messages to the screen based on validator \n    validation_messages = {\n      'email': [\n          { type: 'maxlength', message: 'Your email cannot be more than 30 characters long.' },\n          { type: 'pattern', message: 'You must enter a valid email.' }\n        ]\n      }\n// If an account with that email exists and password reset link will be sent\n\n\n// generate_password_reset\n  checkEmail(){\n    console.log(\"try signup\");\n    console.log(this.emailForm.value);\n\n    if(!this.emailForm.valid){\n      console.log(\"INVALID\");\n    } else {\n      console.log(\"VALID\");\n\n      // Find a way to get email and password input from user\n      var obj = {func: \"generate_reset\", email: this.emailForm.value['email'], isMobileRequest: true};\n    \n      this.http.post(\"https://recycle.hpc.tcnj.edu/php/password-resets-handler.php\", JSON.stringify(obj)).subscribe(data => {\n      \n          //not getting result\n          var result = data as any[];\n\n          if(result['missingInput']){\n            console.log(\"missing Input\");\n            this.emailSent = false;\n\n          } else {\n            // output to user it succeeded and move to next page\n            this.emailSent = true;\n            console.log(\"email sent\"); \n            this.emailForm.reset();\n          }\n      });\n    }\n  }\n\n  emailFailure(){\n\n    return this.emailSent;\n  \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RecoverPasswordPage } from './recover-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RecoverPasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RecoverPasswordPageRoutingModule {}\n","export default \".validation-errors {\\n  color: red;\\n  margin: 10px;\\n  font-size: 75%;\\n}\\n\\n.validation-confirmation {\\n  color: green;\\n  margin: 10px;\\n  font-size: 75%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3JlY292ZXItcGFzc3dvcmQucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksVUFBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0FBQ0o7O0FBRUE7RUFDSSxZQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7QUFDSiIsImZpbGUiOiJyZWNvdmVyLXBhc3N3b3JkLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi52YWxpZGF0aW9uLWVycm9yc3tcbiAgICBjb2xvcjogcmVkOyBcbiAgICBtYXJnaW46IDEwcHg7XG4gICAgZm9udC1zaXplOiA3NSU7XG59XG5cbi52YWxpZGF0aW9uLWNvbmZpcm1hdGlvbntcbiAgICBjb2xvcjogZ3JlZW47IFxuICAgIG1hcmdpbjogMTBweDtcbiAgICBmb250LXNpemU6IDc1JTtcbn0iXX0= */\";"]}