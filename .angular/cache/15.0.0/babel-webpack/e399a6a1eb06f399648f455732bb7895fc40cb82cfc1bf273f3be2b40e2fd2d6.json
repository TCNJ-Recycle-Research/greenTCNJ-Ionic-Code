{"ast":null,"code":"import * as i0 from \"@angular/core\";\n// This file was made to check that passwords are equivalent on the registration page, it is a custom validator as there is \n// no default password match validator\nexport let CustomValidationService = /*#__PURE__*/(() => {\n  class CustomValidationService {\n    constructor() {}\n    //loks at 2 string values within a form group and compares them\n    passwordMatchValidator(password, confirmPassword) {\n      return formGroup => {\n        const passwordControl = formGroup.controls[password];\n        const confirmPasswordControl = formGroup.controls[confirmPassword];\n        if (!passwordControl || !confirmPasswordControl) {\n          return null;\n        }\n        if (confirmPasswordControl.errors && !confirmPasswordControl.errors.passwordMismatch) {\n          return null;\n        }\n        if (passwordControl.value !== confirmPasswordControl.value) {\n          confirmPasswordControl.setErrors({\n            passwordMismatch: true\n          });\n        } else {\n          confirmPasswordControl.setErrors(null);\n        }\n      };\n    }\n  }\n  CustomValidationService.ɵfac = function CustomValidationService_Factory(t) {\n    return new (t || CustomValidationService)();\n  };\n  CustomValidationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CustomValidationService,\n    factory: CustomValidationService.ɵfac,\n    providedIn: 'root'\n  });\n  return CustomValidationService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}