{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Renderer2 } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/authentication.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@ionic/storage\";\nimport * as i4 from \"@angular/common/http\";\nfunction SettingsPage_ion_item_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\")(1, \"ion-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-checkbox\", 10);\n    i0.ɵɵlistener(\"ionChange\", function SettingsPage_ion_item_17_Template_ion_checkbox_ionChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.boxChecked($event));\n    })(\"ngModelChange\", function SettingsPage_ion_item_17_Template_ion_checkbox_ngModelChange_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const entry_r1 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(entry_r1.isChecked = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const entry_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(entry_r1.val);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", entry_r1.isChecked);\n  }\n}\nexport let SettingsPage = /*#__PURE__*/(() => {\n  class SettingsPage {\n    constructor(authService, router, renderer, storage, http) {\n      this.authService = authService;\n      this.router = router;\n      this.renderer = renderer;\n      this.storage = storage;\n      this.http = http;\n      this.form = [{\n        val: 'Recycling',\n        isChecked: false\n      }, {\n        val: 'Water Conservation',\n        isChecked: false\n      }, {\n        val: 'Pollution Prevention',\n        isChecked: false\n      }, {\n        val: 'Energy',\n        isChecked: false\n      }];\n      storage.get('userID').then(val => {\n        this.userID = val;\n      });\n      this.buttonDisabled = true;\n      this.loadInterests();\n    }\n    loadInterests() {\n      this.storage.get('userRecyclingInterest').then(val => {\n        this.recycling = val;\n        if (val == 0 || val == null) {\n          this.form[0].isChecked = false;\n        } else {\n          this.form[0].isChecked = true;\n        }\n      });\n      this.storage.get('userWaterInterest').then(val => {\n        this.water = val;\n        if (val == 0 || val == null) {\n          this.form[1].isChecked = false;\n        } else {\n          this.form[1].isChecked = true;\n        }\n      });\n      this.storage.get('userPollutionInterest').then(val => {\n        this.pollution = val;\n        if (val == 0 || val == null) {\n          this.form[2].isChecked = false;\n        } else {\n          this.form[2].isChecked = true;\n        }\n      });\n      this.storage.get('userEnergyInterest').then(val => {\n        this.energy = val;\n        if (val == 0 || val == null) {\n          this.form[3].isChecked = false;\n        } else {\n          this.form[3].isChecked = true;\n        }\n      });\n      this.buttonDisabled = true;\n    }\n    boxChecked(item) {\n      //check item.user and do stuff\n      // enables update user interests if a box has been altered\n      this.buttonDisabled = false;\n    }\n    updateUserInterests() {\n      if (this.form[0].isChecked) {\n        this.recycling = 1;\n      } else {\n        this.recycling = 0;\n      }\n      if (this.form[1].isChecked) {\n        this.water = 1;\n      } else {\n        this.water = 0;\n      }\n      if (this.form[2].isChecked) {\n        this.pollution = 1;\n      } else {\n        this.pollution = 0;\n      }\n      if (this.form[3].isChecked) {\n        this.energy = 1;\n      } else {\n        this.energy = 0;\n      }\n      var obj = {\n        func: \"edit_user_interests\",\n        userID: this.userID,\n        recyclingInterest: this.recycling,\n        waterInterest: this.water,\n        pollutionInterest: this.pollution,\n        energyInterest: this.energy\n      };\n      this.http.post(\"https://recycle.hpc.tcnj.edu/php/users-handler.php\", JSON.stringify(obj)).subscribe(data => {\n        var result = data;\n        if (result['missingInput']) {\n          // output to user it succeeded and move to next page\n          console.log(\"missing Input\");\n        } else {\n          this.storage.set('userRecyclingInterest', this.recycling);\n          this.storage.set('userWaterInterest', this.water);\n          this.storage.set('userPollutionInterest', this.pollution);\n          this.storage.set('userEnergyInterest', this.energy);\n          this.buttonDisabled = true;\n        }\n      });\n    }\n    logout() {\n      return __awaiter(this, void 0, void 0, function* () {\n        // clears local storage \n        this.storage.clear();\n        yield this.authService.logout();\n        this.router.navigateByUrl('/', {\n          replaceUrl: true\n        });\n      });\n    }\n    onClick(event) {\n      if (event.detail.checked) {\n        this.renderer.setAttribute(document.body, 'color-theme', 'dark');\n      } else {\n        this.renderer.setAttribute(document.body, 'color-theme', 'light');\n      }\n    }\n  }\n  SettingsPage.ɵfac = function SettingsPage_Factory(t) {\n    return new (t || SettingsPage)(i0.ɵɵdirectiveInject(i1.AuthenticationService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i3.Storage), i0.ɵɵdirectiveInject(i4.HttpClient));\n  };\n  SettingsPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SettingsPage,\n    selectors: [[\"app-settings\"]],\n    decls: 24,\n    vars: 2,\n    consts: [[\"mode\", \"ios\"], [1, \"ion-text-wrap\"], [\"slot\", \"start\"], [\"menu\", \"main-menu\"], [\"lines\", \"full\"], [\"slot\", \"end\", 3, \"ionChange\"], [4, \"ngFor\", \"ngForOf\"], [\"aria-label\", \"update interests\", \"color\", \"success\", \"expand\", \"full\", 3, \"disabled\", \"click\"], [1, \"ion-no-border\"], [\"aria-label\", \"logout\", \"expand\", \"full\", 3, \"click\"], [\"slot\", \"end\", 3, \"ngModel\", \"ionChange\", \"ngModelChange\"]],\n    template: function SettingsPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\", 0)(2, \"ion-title\")(3, \"div\", 1);\n        i0.ɵɵtext(4, \" Settings \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"ion-buttons\", 2);\n        i0.ɵɵelement(6, \"ion-menu-button\", 3);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(7, \"ion-content\")(8, \"ion-list\")(9, \"ion-item\", 4)(10, \"ion-label\");\n        i0.ɵɵtext(11, \" Receive push notifications \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"ion-toggle\", 5);\n        i0.ɵɵlistener(\"ionChange\", function SettingsPage_Template_ion_toggle_ionChange_12_listener($event) {\n          return ctx.onClick($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(13, \"br\");\n        i0.ɵɵelementStart(14, \"ion-list\")(15, \"ion-title\");\n        i0.ɵɵtext(16, \"Manage my interests\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, SettingsPage_ion_item_17_Template, 4, 2, \"ion-item\", 6);\n        i0.ɵɵelementStart(18, \"ion-button\", 7);\n        i0.ɵɵlistener(\"click\", function SettingsPage_Template_ion_button_click_18_listener() {\n          return ctx.updateUserInterests();\n        });\n        i0.ɵɵtext(19, \"Update Interests\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(20, \"ion-footer\", 8)(21, \"ion-toolbar\")(22, \"ion-button\", 9);\n        i0.ɵɵlistener(\"click\", function SettingsPage_Template_ion_button_click_22_listener() {\n          return ctx.logout();\n        });\n        i0.ɵɵtext(23, \"Logout\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngForOf\", ctx.form);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.buttonDisabled);\n      }\n    }\n  });\n  return SettingsPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}