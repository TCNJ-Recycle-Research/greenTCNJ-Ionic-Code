{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@ionic/storage\";\nfunction ReportissuePage_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1, \"*\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReportissuePage_ng_container_20_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", validation_r3.message, \" \");\n  }\n}\nfunction ReportissuePage_ng_container_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ReportissuePage_ng_container_20_div_1_Template, 2, 1, \"div\", 15);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const validation_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.wordForm.get(\"word\").hasError(validation_r3.type) && (ctx_r1.wordForm.get(\"word\").dirty || ctx_r1.wordForm.get(\"word\").touched));\n  }\n}\nfunction ReportissuePage_span_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Your report has been submitted!\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let ReportissuePage = /*#__PURE__*/(() => {\n  class ReportissuePage {\n    // firstName: new FormControl()\n    constructor(router, http, formBuilder, storage) {\n      this.router = router;\n      this.http = http;\n      this.formBuilder = formBuilder;\n      this.storage = storage;\n      this.emailInput = \"\";\n      this.wordSent = false;\n      this.today = new Date(Date.now());\n      // responsible for printing error messages to the screen based on validator \n      this.validation_messages = {\n        'word': [{\n          type: 'minlength',\n          message: 'Your suggested material must be at least 2 characters long.'\n        }, {\n          type: 'maxlength',\n          message: 'Your suggested material must be less than 200 characters long.'\n        }, {\n          type: 'required',\n          message: 'You must enter a word to submit.'\n        }]\n      };\n      this.wordForm = formBuilder.group({\n        // Require validators for the input fields so we can quickly tell them if their input is valid, the patten string is what characters\n        // are allowed in the field and for email it makes sure there is a @ character and a domain field like .com\n        word: ['', Validators.compose([Validators.minLength(2), Validators.maxLength(200), Validators.required])],\n        description: ['']\n      });\n      storage.get('userEmail').then(val => {\n        this.usrEmail = val;\n      });\n    }\n    ngOnInit() {}\n    submitWord() {\n      if (!this.wordForm.valid) {\n        console.log(\"INVALID\");\n      } else {\n        console.log(\"VALID\");\n        this.wordSent = true;\n        // Find a way to get email and password input from user\n        var obj = {\n          func: \"add_issue\",\n          userEmail: this.usrEmail,\n          issueDescription: this.wordForm.value['word']\n        };\n        this.http.post(\"https://recycle.hpc.tcnj.edu/php/issues-handler.php\", JSON.stringify(obj)).subscribe(data => {\n          var result = data;\n          if (result['missingInput']) {\n            // output to user it succeeded and move to next page\n            console.log(\"missing Input\");\n            this.wordSent = false;\n          } else {\n            this.wordSent = true;\n            console.log(\"word submitted\");\n            this.wordForm.reset();\n          }\n        });\n      }\n    }\n    wordFailure() {\n      return this.wordSent;\n    }\n    formInputIsRequired(formInput) {\n      if (this.wordForm.controls[formInput]) {\n        if (this.wordForm.controls[formInput].hasError('required')) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }\n  ReportissuePage.ɵfac = function ReportissuePage_Factory(t) {\n    return new (t || ReportissuePage)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.UntypedFormBuilder), i0.ɵɵdirectiveInject(i4.Storage));\n  };\n  ReportissuePage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ReportissuePage,\n    selectors: [[\"app-reportissue\"]],\n    decls: 27,\n    vars: 4,\n    consts: [[\"mode\", \"ios\"], [1, \"ion-text-wrap\"], [\"slot\", \"start\"], [\"menu\", \"main-menu\"], [3, \"formGroup\", \"ngSubmit\"], [\"lines\", \"full\"], [\"position\", \"floating\"], [\"class\", \"required\", 4, \"ngIf\"], [\"formControlName\", \"word\", \"type\", \"text\", \"autoGrow\", \"true\", \"required\", \"\"], [1, \"validation-errors\"], [4, \"ngFor\", \"ngForOf\"], [\"aria-label\", \"Submit\", \"type\", \"submit\", \"color\", \"success\", \"expand\", \"block\"], [1, \"validation-confirmation\"], [4, \"ngIf\"], [1, \"required\"], [\"class\", \"error-message\", 4, \"ngIf\"], [1, \"error-message\"]],\n    template: function ReportissuePage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\", 0)(2, \"ion-title\")(3, \"div\", 1);\n        i0.ɵɵtext(4, \" Help/Report an Issue \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"ion-buttons\", 2);\n        i0.ɵɵelement(6, \"ion-menu-button\", 3);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(7, \"ion-content\")(8, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function ReportissuePage_Template_form_ngSubmit_8_listener() {\n          return ctx.submitWord();\n        });\n        i0.ɵɵelementStart(9, \"ion-item\", 5);\n        i0.ɵɵelement(10, \"br\")(11, \"br\");\n        i0.ɵɵelementStart(12, \"ion-text\");\n        i0.ɵɵtext(13, \"Having issues within the application or with green initiatives on campus? Submit your reports here.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"br\");\n        i0.ɵɵelementStart(15, \"ion-label\", 6);\n        i0.ɵɵtext(16, \"Report Issue \");\n        i0.ɵɵtemplate(17, ReportissuePage_span_17_Template, 2, 0, \"span\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"ion-textarea\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 9);\n        i0.ɵɵtemplate(20, ReportissuePage_ng_container_20_Template, 2, 1, \"ng-container\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"ion-row\")(22, \"ion-col\")(23, \"ion-button\", 11);\n        i0.ɵɵtext(24, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 12);\n        i0.ɵɵtemplate(26, ReportissuePage_span_26_Template, 2, 0, \"span\", 13);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.wordForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.formInputIsRequired(\"word\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.validation_messages.word);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.wordFailure());\n      }\n    },\n    styles: [\".validation-errors[_ngcontent-%COMP%]{color:red;margin:10px;font-size:75%}\"]\n  });\n  return ReportissuePage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}